// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/song/library": {
            "get": {
                "description": "Retrieves the user's entire song library, optionally filtered by group, song, or release date.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Retrieve the user's song library",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Song name",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Release date (YYYY-MM-DD)",
                        "name": "releaseDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of songs"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/song/lyrics": {
            "get": {
                "description": "Returns the lyrics of the song, divided into pages.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lyrics"
                ],
                "summary": "Get the lyrics of the song",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "song",
                        "name": "song",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of verses per page (2 by default))",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lyrics by page",
                        "schema": {
                            "$ref": "#/definitions/receive_lyrics.SongLyricsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/song/remove": {
            "delete": {
                "description": "Deletes a song from the repository by the name of the band and the name of the song.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "Delete a song",
                "parameters": [
                    {
                        "description": "Data for deleting a song",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/remove_song.Song"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The song was successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "The song was not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/song/update": {
            "patch": {
                "description": "Updates the song data in the repository based on the original song data and new data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Update the song data",
                "parameters": [
                    {
                        "description": "Data for updating the song",
                        "name": "updateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update_song_data.UpdateSongRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The song data has been successfully updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/songs": {
            "post": {
                "description": "Adds a song with information about the band, name, release date, lyrics and a link to YouTube",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "Add a new song",
                "parameters": [
                    {
                        "description": "Information about the song",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/add_song.Song"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Song added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "415": {
                        "description": "Content-Type header is not application/json",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "add_song.Song": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        },
        "receive_lyrics.SongLyricsResponse": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "lyrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "remove_song.Song": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        },
        "update_song_data.UpdateSongRequest": {
            "type": "object",
            "properties": {
                "firstGroup": {
                    "type": "string"
                },
                "firstSong": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "beta 0.1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Online song library",
	Description:      "API Server for  online song library",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
